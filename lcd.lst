


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: Tyler Anson, Ethan Shen
    3 00000000         ; Last modification date: 5/5/19
    4 00000000         
    5 00000000         ; Runs on LM4F120/TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 40004100 
                       DC      EQU              0x40004100
   23 00000000 00000000 
                       DC_COMMAND
                               EQU              0
   24 00000000 00000040 
                       DC_DATA EQU              0x40
   25 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   26 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   27 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   28 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   29 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   30 00000000         
   31 00000000                 EXPORT           writecommand
   32 00000000                 EXPORT           writedata
   33 00000000         
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000                 THUMB
   36 00000000                 ALIGN
   37 00000000         
   38 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   39 00000000         ; sent.  The SSI module has hardware input and output FI



ARM Macro Assembler    Page 2 


                       FOs
   40 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   41 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   42 00000000         ; lot of data, the FIFOs are not used when writing
   43 00000000         ; commands, and they are used when writing data.  This
   44 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   45 00000000         ; that is actually being transmitted.
   46 00000000         ; The write command operation waits until all data has b
                       een
   47 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   48 00000000         ; the command, and then waits for the transmission to
   49 00000000         ; finish.
   50 00000000         ; The write data operation waits until there is room in 
                       the
   51 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   52 00000000         ; and then adds the data to the transmit FIFO.
   53 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   54 00000000         ; the SSI0 module is not initialized and enabled.
   55 00000000         
   56 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   57 00000000         ; Input: R0  8-bit command to transmit
   58 00000000         ; Output: none
   59 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   60 00000000         writecommand
   61 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   62 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   63 00000000         ;3) Clear D/C=PA6 to zero
   64 00000000         ;4) Write the command to SSI0_DR_R
   65 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   66 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   67 00000000         
   68 00000000         
   69 00000000 B570            PUSH             {R4, R5, R6, LR} ; push registe
                                                            r states
   70 00000002         
   71 00000002         cmdBUSY
   72 00000002 4C0F            LDR              R4, =SSI0_SR_R 
                                                            ; check status bit
   73 00000004 6825            LDR              R5, [R4]
   74 00000006 F015 0510       ANDS             R5, #0x10   ; isolate bit 4
   75 0000000A D1FA            BNE              cmdBUSY     ; if HIGH, wait
   76 0000000C         
   77 0000000C 4C0D            LDR              R4, =DC
   78 0000000E 4D0E            LDR              R5, =SSI0_DR_R
   79 00000010 7826            LDRB             R6, [R4]
   80 00000012 F006 0600       AND              R6, #0      ; clear DC
   81 00000016 7026            STRB             R6, [R4]    ; set PA6 0
   82 00000018         
   83 00000018 7028            STRB             R0, [R5]    ; write command to 



ARM Macro Assembler    Page 3 


                                                            SSI0_DR_R
   84 0000001A         
   85 0000001A         cmdBUSY1
   86 0000001A 4C09            LDR              R4, =SSI0_SR_R 
                                                            ; check status bit
   87 0000001C 6825            LDR              R5, [R4]
   88 0000001E F015 0510       ANDS             R5, #0x10
   89 00000022 D1FA            BNE              cmdBUSY1    ; if HIGH, wait
   90 00000024         
   91 00000024 BD70            POP              {R4, R5, R6, PC} ; return
   92 00000026         
   93 00000026         
   94 00000026         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   95 00000026         ; Input: R0  8-bit data to transmit
   96 00000026         ; Output: none
   97 00000026         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   98 00000026         writedata
   99 00000026         ;1) Read SSI0_SR_R and check bit 1, 
  100 00000026         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
  101 00000026         ;3) Set D/C=PA6 to one
  102 00000026         ;4) Write the 8-bit data to SSI0_DR_R
  103 00000026         
  104 00000026 B570            PUSH             {R4, R5, R6, LR}
  105 00000028         
  106 00000028         dataBusy
  107 00000028 4C05            LDR              R4, =SSI0_SR_R
  108 0000002A 7825            LDRB             R5, [R4]
  109 0000002C F015 0501       ANDS             R5, #0x1    ; isolate bit 1
  110 00000030 D0FA            BEQ              dataBusy    ; if [1] = 0, wait
  111 00000032         
  112 00000032 4C04            LDR              R4, =DC
  113 00000034 F04F 0540       MOV              R5, #0x40
  114 00000038 7025            STRB             R5, [R4]    ; move 1 into DC
  115 0000003A         
  116 0000003A 4C03            LDR              R4, =SSI0_DR_R
  117 0000003C 7020            STRB             R0, [R4]    ; move data into DA
                                                            TA_R
  118 0000003E         
  119 0000003E BD70            POP              {R4, R5, R6, PC} ; return
  120 00000040         
  121 00000040         
  122 00000040         
  123 00000040         ;***************************************************
  124 00000040         ; This is a library for the Adafruit 1.8" SPI display.
  125 00000040         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  126 00000040         ; ----> http://www.adafruit.com/products/358
  127 00000040         ; as well as Adafruit raw 1.8" TFT display
  128 00000040         ; ----> http://www.adafruit.com/products/618
  129 00000040         ;
  130 00000040         ; Check out the links above for our tutorials and wiring
                        diagrams
  131 00000040         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  132 00000040         ; interface (RST is optional)
  133 00000040         ; Adafruit invests time and resources providing this ope



ARM Macro Assembler    Page 4 


                       n source code,
  134 00000040         ; please support Adafruit and open-source hardware by pu
                       rchasing
  135 00000040         ; products from Adafruit!
  136 00000040         ;
  137 00000040         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  138 00000040         ; MIT license, all text above must be included in any re
                       distribution
  139 00000040         ;****************************************************
  140 00000040         
  141 00000040                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  142 00000040                 END                          ; end of file
              4000800C 
              40004100 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -I.\RTE\_SpaceInvaders -IC:\Keil_v5\ARM\PACK\ARM
\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Devic
e\Include\TM4C123 --predefine="__UVISION_VERSION SETA 526" --predefine="_RTE_ S
ETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file LCD.s
   Uses
      None
Comment: .text unused
cmdBUSY 00000002

Symbol: cmdBUSY
   Definitions
      At line 71 in file LCD.s
   Uses
      At line 75 in file LCD.s
Comment: cmdBUSY used once
cmdBUSY1 0000001A

Symbol: cmdBUSY1
   Definitions
      At line 85 in file LCD.s
   Uses
      At line 89 in file LCD.s
Comment: cmdBUSY1 used once
dataBusy 00000028

Symbol: dataBusy
   Definitions
      At line 106 in file LCD.s
   Uses
      At line 110 in file LCD.s
Comment: dataBusy used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 60 in file LCD.s
   Uses
      At line 31 in file LCD.s
Comment: writecommand used once
writedata 00000026

Symbol: writedata
   Definitions
      At line 98 in file LCD.s
   Uses
      At line 32 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 40004100

Symbol: DC
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 77 in file LCD.s
      At line 112 in file LCD.s

DC_COMMAND 00000000

Symbol: DC_COMMAND
   Definitions
      At line 23 in file LCD.s
   Uses
      None
Comment: DC_COMMAND unused
DC_DATA 00000040

Symbol: DC_DATA
   Definitions
      At line 24 in file LCD.s
   Uses
      None
Comment: DC_DATA unused
SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 25 in file LCD.s
   Uses
      At line 78 in file LCD.s
      At line 116 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 26 in file LCD.s
   Uses
      At line 72 in file LCD.s
      At line 86 in file LCD.s
      At line 107 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 28 in file LCD.s
   Uses
      None
Comment: SSI_SR_BSY unused
SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 27 in file LCD.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 29 in file LCD.s
   Uses
      None
Comment: SSI_SR_TNF unused
8 symbols
349 symbols in table
